{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicholasong/Documents/GitHub/pawly/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TaskCard from \"./components/TaskCard\";\nimport * as Font from \"expo-font\";\nimport TaskHomeScreen from \"./screens/Home/TaskHomeScreen\";\nimport PetProfileScreen from \"./screens/Petfolio/PetProfileScreen\";\nimport AttributeCard from \"./components/AttributeCard\";\nimport MainPetsScreen from \"./screens/Petfolio/MainPetsScreen\";\nimport PetfolioStack from \"./screens/Petfolio/PetfolioStack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport TabStack from \"./screens/misc/TabStack\";\nimport CustomTabButton from \"./screens/misc/components/CustomTabButton\";\nimport AddTaskScreen from \"./screens/Tasks/AddTaskScreen\";\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              \"Recoleta-Regular\": require(\"./assets/fonts/Recoleta-Regular.ttf\"),\n              \"Recoleta-Bold\": require(\"./assets/fonts/Recoleta-Bold.ttf\"),\n              \"Sofia-Pro-Regular\": require(\"./assets/fonts/Sofia-Pro-Regular.ttf\")\n            }));\n\n          case 2:\n            setIsLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadFonts();\n  }, []);\n  return isLoaded ? React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(TabStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Still Loading\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicholasong/Documents/GitHub/pawly/App.js"],"names":["StatusBar","React","useState","useEffect","TaskCard","Font","TaskHomeScreen","PetProfileScreen","AttributeCard","MainPetsScreen","PetfolioStack","NavigationContainer","TabStack","CustomTabButton","AddTaskScreen","App","isLoaded","setIsLoaded","loadFonts","loadAsync","require"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,cAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;;AAEA,SAASC,GAAT,GAAe;AACX,kBAAgCb,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRb,IAAI,CAACc,SAAL,CAAe;AACjB,kCAAoBC,OAAO,uCADV;AAEjB,+BAAiBA,OAAO,oCAFP;AAGjB,mCAAqBA,OAAO;AAHX,aAAf,CADQ;;AAAA;AAMdH,YAAAA,WAAW,CAAC,IAAD,CAAX;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASAd,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAgCA,SAAOF,QAAQ,GAEb,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFa,GAOX,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAPJ;AAaH;;AAGD,eAAeD,GAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport TaskCard from \"./components/TaskCard\";\nimport * as Font from \"expo-font\";\nimport TaskHomeScreen from \"./screens/Home/TaskHomeScreen\";\nimport PetProfileScreen from \"./screens/Petfolio/PetProfileScreen\";\nimport AttributeCard from \"./components/AttributeCard\";\nimport MainPetsScreen from \"./screens/Petfolio/MainPetsScreen\";\nimport PetfolioStack from \"./screens/Petfolio/PetfolioStack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport TabStack from \"./screens/misc/TabStack\";\nimport CustomTabButton from \"./screens/misc/components/CustomTabButton\";\nimport AddTaskScreen from \"./screens/Tasks/AddTaskScreen\";\n\nfunction App() {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const loadFonts = async () => {\n        await Font.loadAsync({\n            \"Recoleta-Regular\": require(\"./assets/fonts/Recoleta-Regular.ttf\"),\n            \"Recoleta-Bold\": require(\"./assets/fonts/Recoleta-Bold.ttf\"),\n            \"Sofia-Pro-Regular\": require(\"./assets/fonts/Sofia-Pro-Regular.ttf\"),\n        });\n        setIsLoaded(true);\n    };\n\n    useEffect(() => {\n        loadFonts();\n    }, []);\n    // const saveUserToDB = async(user) =>{\n    //   await API.graphql(graphqlOperation(createUser,{input: user}))\n    // }\n\n    // useEffect(() =>{\n    //   const updateUser = async()=>{\n    //     const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true})\n    //     if (userInfo){\n    //       console.log(userInfo.attributes.sub)\n    //       const userData = await API.graphql(graphqlOperation(getUser,{id:userInfo.attributes.sub}))\n    //       if (!userData.getUser){\n    //         const user = {\n    //           id: userInfo.attributes.sub,\n    //           username: userInfo.username,\n    //           name: userInfo.username,\n    //           image: 'dummy'\n    //         }\n    //         console.log(user)\n    //         saveUserToDB(user);\n    //       } else{\n    //         console.log(\"user alr exists\");\n    //       }\n    //     }\n\n    //   }\n    //   updateUser();\n    // }\n    // ,[])\n\n    return isLoaded ? (\n        // <AddTaskScreen></AddTaskScreen>\n      <NavigationContainer>\n        <TabStack />\n      </NavigationContainer>\n        \n    ) : (\n        <View>\n            <Text>Still Loading</Text>\n        </View>\n    );\n\n    // <Tweet/>\n}\n\n// export default withAuthenticator(App)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}