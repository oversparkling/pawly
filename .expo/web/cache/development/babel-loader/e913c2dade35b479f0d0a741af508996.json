{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicholasong/Documents/GitHub/pawly/screens/Tasks/AddTaskScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Icon, Divider } from \"react-native-elements\";\nimport TaskTypeCard from \"./TaskTypeCard\";\n\nfunction AddTaskScreen(props) {\n  var _this = this;\n\n  var _useState = useState([{\n    name: \"Brush\",\n    key: \"1\"\n  }, {\n    name: \"Clean\",\n    key: \"2\"\n  }, {\n    name: \"Feed\",\n    key: \"3\"\n  }, {\n    name: \"Groom\",\n    key: \"4\"\n  }, {\n    name: \"Play\",\n    key: \"5\"\n  }, {\n    name: \"Shower\",\n    key: \"6\"\n  }, {\n    name: \"Walk\",\n    key: \"7\"\n  }, {\n    name: \"Train\",\n    key: \"8\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back-outline\",\n    type: \"ionicon\",\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \" Add Task \")), React.createElement(View, {\n    style: styles.taskContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, task.map(function (item) {\n    return React.createElement(TaskTypeCard, {\n      text: item.name,\n      key: item.key,\n      onPress: function onPress() {\n        return navigation.navigate(\"EditTask\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    });\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingTop: 60\n  },\n  taskContainer: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  header: {\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginBottom: 25\n  },\n  headerText: {\n    fontSize: 40,\n    fontFamily: \"Recoleta-Regular\",\n    paddingLeft: 60\n  },\n  scrollView: {\n    backgroundColor: \"white\",\n    marginHorizontal: 20\n  }\n});\nexport default AddTaskScreen;","map":{"version":3,"sources":["/Users/nicholasong/Documents/GitHub/pawly/screens/Tasks/AddTaskScreen.js"],"names":["React","useState","useNavigation","Icon","Divider","TaskTypeCard","AddTaskScreen","props","name","key","task","setTask","navigation","styles","mainContainer","header","headerText","taskContainer","map","item","navigate","StyleSheet","create","width","backgroundColor","paddingLeft","paddingRight","paddingTop","flexDirection","alignItems","justifyContent","marginBottom","fontSize","fontFamily","scrollView","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, ScrollView, View, TouchableOpacity } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Icon, Divider } from \"react-native-elements\";\nimport TaskTypeCard from \"./TaskTypeCard\";\n\nfunction AddTaskScreen(props) {\n    const [task, setTask] = useState([\n        { name: \"Brush\", key: \"1\" },\n        { name: \"Clean\", key: \"2\" },\n        { name: \"Feed\", key: \"3\" },\n        { name: \"Groom\", key: \"4\" },\n        { name: \"Play\", key: \"5\" },\n        { name: \"Shower\", key: \"6\" },\n        { name: \"Walk\", key: \"7\" },\n        { name: \"Train\", key: \"8\" },\n    ]);\n\n    const navigation = useNavigation();\n\n    return (\n        <View style = { styles.mainContainer }>\n            <ScrollView showsVerticalScrollIndicator = { false }> \n                <View style = { styles.header }>\n                  <TouchableOpacity>\n                    <Icon\n                        name = \"arrow-back-outline\"\n                        type = \"ionicon\"\n                        color = \"#000\"\n                    />\n                  </TouchableOpacity>\n                <Text style = { styles.headerText }> Add Task </Text>\n                </View>\n                <View style = {styles.taskContainer}>\n                    {task.map((item) => {\n                        return (\n                            <TaskTypeCard\n                                text={item.name}\n                                key={item.key}\n                                onPress={() => navigation.navigate(\"EditTask\")}\n                            />\n                        );\n                    })}\n                </View>\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n      width:              \"100%\",\n      backgroundColor:    \"white\",\n      paddingLeft:        30,\n      paddingRight:       30,\n      paddingTop:         60,\n    },\n\n    taskContainer: {\n        flexDirection:  \"column\",\n        alignItems:     \"center\",\n        width:          \"100%\",\n        justifyContent: \"space-between\",\n    },\n\n    header: {\n      width:            '100%',\n      alignItems:       'center',\n      flexDirection:    'row',\n      marginBottom:     25,\n    },\n\n    headerText: {\n      fontSize:         40,\n      fontFamily:       \"Recoleta-Regular\",\n      paddingLeft:      60,\n    },\n\n    scrollView: {\n      backgroundColor:  \"white\",\n      marginHorizontal:  20,\n    },\n});\n\nexport default AddTaskScreen;\n"]},"metadata":{},"sourceType":"module"}