{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicholasong/Documents/GitHub/pawly/screens/Tasks/EditTaskScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TaskTypeCard from \"./TaskTypeCard\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nfunction EditTaskScreen(props) {\n  var _this = this;\n\n  var _useState = useState([{\n    name: \"Brush\",\n    key: \"1\"\n  }, {\n    name: \"Clean\",\n    key: \"2\"\n  }, {\n    name: \"Feed\",\n    key: \"3\"\n  }, {\n    name: \"Groom\",\n    key: \"4\"\n  }, {\n    name: \"Play\",\n    key: \"5\"\n  }, {\n    name: \"Shower\",\n    key: \"6\"\n  }, {\n    name: \"Walk\",\n    key: \"7\"\n  }, {\n    name: \"Train\",\n    key: \"8\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      marginTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \" Add Task \"), React.createElement(View, {\n    style: styles.taskContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, task.map(function (item) {\n    return React.createElement(TaskTypeCard, {\n      text: item.name,\n      key: item.key,\n      onPress: function onPress() {\n        return navigation.navigate(\"EditTask\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    });\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    padding: 30,\n    width: \"100%\",\n    backgroundColor: \"white\"\n  },\n  taskContainer: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  header: {\n    fontSize: 35,\n    fontFamily: \"Recoleta-Regular\",\n    marginBottom: 30\n  },\n  scrollView: {\n    backgroundColor: \"white\",\n    marginHorizontal: 20\n  }\n});\nexport default EditTaskScreen;","map":{"version":3,"sources":["/Users/nicholasong/Documents/GitHub/pawly/screens/Tasks/EditTaskScreen.js"],"names":["React","useState","TaskTypeCard","useNavigation","EditTaskScreen","props","name","key","task","setTask","navigation","styles","mainContainer","marginTop","header","taskContainer","map","item","navigate","StyleSheet","create","padding","width","backgroundColor","flexDirection","alignItems","justifyContent","fontSize","fontFamily","marginBottom","scrollView","marginHorizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,YAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,kBAAwBJ,QAAQ,CAAC,CAC7B;AAAEK,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAD6B,EAE7B;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAF6B,EAG7B;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAH6B,EAI7B;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAJ6B,EAK7B;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAL6B,EAM7B;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAN6B,EAO7B;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAP6B,EAQ7B;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAR6B,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAWA,MAAMC,UAAU,GAAGP,aAAa,EAAhC;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,CAACQ,GAAL,CAAS,UAACC,IAAD,EAAU;AAChB,WACI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAEA,IAAI,CAACX,IADf;AAEI,MAAA,GAAG,EAAEW,IAAI,CAACV,GAFd;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMG,UAAU,CAACQ,QAAX,CAAoB,UAApB,CAAN;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GARA,CADL,CAFJ,CADJ,CADJ;AA0BH;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,aAAa,EAAE;AACXS,IAAAA,OAAO,EAAE,EADE;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,eAAe,EAAE;AAHN,GADc;AAQ7BR,EAAAA,aAAa,EAAE;AACXS,IAAAA,aAAa,EAAE,QADJ;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXH,IAAAA,KAAK,EAAE,MAHI;AAIXI,IAAAA,cAAc,EAAE;AAJL,GARc;AAe7BZ,EAAAA,MAAM,EAAE;AACJa,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,kBAFR;AAGJC,IAAAA,YAAY,EAAE;AAHV,GAfqB;AAqB7BC,EAAAA,UAAU,EAAE;AACRP,IAAAA,eAAe,EAAE,OADT;AAERQ,IAAAA,gBAAgB,EAAE;AAFV;AArBiB,CAAlB,CAAf;AA2BA,eAAe3B,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, ScrollView, View } from \"react-native\";\nimport TaskTypeCard from \"./TaskTypeCard\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nfunction EditTaskScreen(props) {\n    const [task, setTask] = useState([\n        { name: \"Brush\", key: \"1\" },\n        { name: \"Clean\", key: \"2\" },\n        { name: \"Feed\", key: \"3\" },\n        { name: \"Groom\", key: \"4\" },\n        { name: \"Play\", key: \"5\" },\n        { name: \"Shower\", key: \"6\" },\n        { name: \"Walk\", key: \"7\" },\n        { name: \"Train\", key: \"8\" },\n    ]);\n\n    const navigation = useNavigation();\n\n    return (\n        <View style={styles.mainContainer}>\n            <ScrollView style={{ marginTop: 50 }}>\n                <Text style={styles.header}> Add Task </Text>\n                <View style={styles.taskContainer}>\n                    {task.map((item) => {\n                        return (\n                            <TaskTypeCard\n                                text={item.name}\n                                key={item.key}\n                                onPress={() => navigation.navigate(\"EditTask\")}\n                            />\n                        );\n                    })}\n                    {/* <TaskTypeCard text = {task.name} /> \n        <TaskTypeCard />\n        <TaskTypeCard />\n        <TaskTypeCard />\n        <TaskTypeCard />\n        <TaskTypeCard />\n        <TaskTypeCard />\n        <TaskTypeCard /> */}\n                </View>\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n        padding: 30,\n        width: \"100%\",\n        backgroundColor: \"white\",\n        // paddingTop: StatusBar.currentHeight,\n    },\n\n    taskContainer: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n\n    header: {\n        fontSize: 35,\n        fontFamily: \"Recoleta-Regular\",\n        marginBottom: 30,\n    },\n\n    scrollView: {\n        backgroundColor: \"white\",\n        marginHorizontal: 20,\n    },\n});\n\nexport default EditTaskScreen;\n"]},"metadata":{},"sourceType":"module"}